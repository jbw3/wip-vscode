{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "WIP",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#function_declaration"
		},
		{
			"include": "#type_definition"
		},
		{
			"include": "#constants_bool"
		},
		{
			"include": "#constants_int"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#assignment_operators"
		},
		{
			"include": "#operators"
		},
		{
			"include": "#types"
		}
	],
	"repository": {
		"comments": {
			"name": "comment.line.wip",
			"match": "#.*"
		},
		"constants_bool": {
			"name": "constant.language.wip",
			"match": "\\b(false|true)\\b"
		},
		"constants_int": {
			"name": "constant.language.wip",
			"match": "\\b(0b[01_]+|0o[0-7_]+|[0-9][0-9_]*|0x[0-9A-Fa-f_]+)\\b"
		},
		"keywords": {
			"name": "keyword.control.wip",
			"match": "\\b(elif|else|extern|fun|if|var|while)\\b"
		},
		"strings": {
			"begin": "\"",
			"end": "\"|\n",
			"name": "string.quoted.double.wip",
			"patterns": [{
				"name": "constant.character.escape.wip",
				"match": "\\\\([\\\\'\"nrt]|x[0-9A-Fa-f]{2}|u\\{[0-9A-Fa-f]{1,8}\\})"
			}]
		},
		"assignment_operators": {
			"name": "keyword.operator.assignment.wip",
			"match": "<<=|>>>=|>>=|\\+=|-=|\\*=|/=|%=|&=|\\|=|\\^=|="
		},
		"operators": {
			"name": "keyword.operator.wip",
			"match": "<<|>>>|>>|==|!=|<=|>=|&&|\\|\\||\\+|-|\\*|/|%|&|\\||\\^|!|<|>"
		},
		"types": {
			"name": "storage.type.wip",
			"match": "\\b(bool|i8|i16|i32|i64|isize|str|u8|u16|u32|u64|usize)\\b"
		},
		"function_declaration": {
			"begin": "\\bfun\\b",
			"end": "{|;",
			"beginCaptures": {
				"0": { "name": "keyword.control.wip" }
			},
			"name": "meta.function.definition.wip",
			"patterns": [{
				"include": "#comments"
			},
			{
				"include": "#types"
			},
			{
				"begin": "\\b([_a-zA-Z][_a-zA-Z0-9]*) *\\(",
				"end": "\\)",
				"beginCaptures": {
					"1": { "name": "entity.name.function.wip" }
				},
				"name": "meta.function.definition.parameters.wip",
				"patterns": [{
					"include": "#comments"
				},
				{
					"include": "#types"
				}]
			}]
		},
		"type_definition": {
			"begin": "\\btype\\b",
			"end": "{",
			"beginCaptures": {
				"0": { "name": "storage.type.wip" }
			},
			"name": "meta.head.wip",
			"patterns": [{
				"include": "#comments"
			},
			{
				"name": "entity.name.type.wip",
				"match": "[_a-zA-Z][_a-zA-Z0-9]*"
			}]
		}
	},
	"scopeName": "source.wip"
}
